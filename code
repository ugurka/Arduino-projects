


#include <SPI.h>
#include <SD.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 20, 4);// Set  LCD I2C address

//LCD pins : SCL pin to A5, SDA pin to A4 - I2C connections
//SD pins : MISO to 12, MOSI to 11, SCK to 13


const int trigPin = 8;
const int echoPin = 7;
const int chipSelect = 4;

// defines variables
long duration;
int distance;

void setup() 
{
  lcd.init();
  lcd.backlight();
  lcd.setCursor(3,0);
  lcd.print("Hello");
  lcd.setCursor(3,0);
  lcd.print("Foseco Enschede");
  delay(2000);
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  Serial.begin(9600); // Starts the serial communication
  
  if (!SD.begin(chipSelect)) {
  lcd.setCursor(2,2);
  lcd.print("SD card failed,");
  lcd.setCursor(2,3);
  lcd.print(" or not present");
    // don't do anything more:
    while (1);
  }
  lcd.setCursor(0,1);
  lcd.print("card initialized.");
  lcd.clear();
  
  File dataFile = SD.open("Results.txt", FILE_WRITE);

  if (dataFile){
    dataFile.println("New Measurement");
    dataFile.close();
  }

  

}



void loop() 
{

digitalWrite(trigPin, LOW);
delayMicroseconds(2);

// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);

// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);

// Calculating the distance
distance= duration*0.03436/2.0;

// Prints the distance on the Serial Monitor
Serial.print("Distance: ");
Serial.print(distance);
Serial.println(" cm");
delay (500);

lcd.setCursor(0,0);
lcd.print("Measuring... "); 
lcd.setCursor(1,1);
lcd.print("Distance : "); 
lcd.setCursor(11,1);
lcd.print(distance);
lcd.setCursor(15,1);
lcd.print("cm"); 
lcd.setCursor(1,2);
lcd.print("Temperature : "); 
lcd.setCursor(17,2);
lcd.print("C"); 
lcd.clear();

File dataFile = SD.open("Results.txt", FILE_WRITE);
dataFile.println(int(distance));
dataFile.close();

}
